/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class f
/*     */   extends cri.m
/*     */ {
/*     */   public f(int ☃, Random random, cra cra1, gc gc1) {
/* 799 */     super(clb.j, ☃);
/*     */     
/* 801 */     a(gc1);
/* 802 */     this.n = cra1;
/*     */   }
/*     */   
/*     */   public f(csw ☃, md md1) {
/* 806 */     super(clb.j, md1);
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(cru ☃, List<cru> list, Random random) {
/* 811 */     a((cri.q)☃, list, random, 5, 3, true);
/*     */   }
/*     */   
/*     */   public static f a(List<cru> ☃, Random random, int i, int j, int k, gc gc1, int n) {
/* 815 */     cra cra = cra.a(i, j, k, -5, -3, 0, 13, 14, 13, gc1);
/*     */     
/* 817 */     if (!a(cra) || cru.a(☃, cra) != null) {
/* 818 */       return null;
/*     */     }
/*     */     
/* 821 */     return new f(n, random, cra, gc1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(bsr ☃, bsn bsn1, cfy cfy1, Random random, cra cra1, brd brd1, fx fx1) {
/* 827 */     a(☃, cra1, 0, 3, 0, 12, 4, 12, bup.dV.n(), bup.dV.n(), false);
/*     */     
/* 829 */     a(☃, cra1, 0, 5, 0, 12, 13, 12, bup.a.n(), bup.a.n(), false);
/*     */ 
/*     */     
/* 832 */     a(☃, cra1, 0, 5, 0, 1, 12, 12, bup.dV.n(), bup.dV.n(), false);
/* 833 */     a(☃, cra1, 11, 5, 0, 12, 12, 12, bup.dV.n(), bup.dV.n(), false);
/* 834 */     a(☃, cra1, 2, 5, 11, 4, 12, 12, bup.dV.n(), bup.dV.n(), false);
/* 835 */     a(☃, cra1, 8, 5, 11, 10, 12, 12, bup.dV.n(), bup.dV.n(), false);
/* 836 */     a(☃, cra1, 5, 9, 11, 7, 12, 12, bup.dV.n(), bup.dV.n(), false);
/* 837 */     a(☃, cra1, 2, 5, 0, 4, 12, 1, bup.dV.n(), bup.dV.n(), false);
/* 838 */     a(☃, cra1, 8, 5, 0, 10, 12, 1, bup.dV.n(), bup.dV.n(), false);
/* 839 */     a(☃, cra1, 5, 9, 0, 7, 12, 1, bup.dV.n(), bup.dV.n(), false);
/*     */ 
/*     */     
/* 842 */     a(☃, cra1, 2, 11, 2, 10, 12, 10, bup.dV.n(), bup.dV.n(), false);
/*     */ 
/*     */     
/* 845 */     a(☃, cra1, 5, 8, 0, 7, 8, 0, bup.dW.n(), bup.dW.n(), false);
/*     */     
/* 847 */     ceh ceh1 = bup.dW.n().a(bwq.d, Boolean.valueOf(true)).a(bwq.b, Boolean.valueOf(true));
/* 848 */     ceh ceh2 = bup.dW.n().a(bwq.a, Boolean.valueOf(true)).a(bwq.c, Boolean.valueOf(true));
/*     */     
/*     */     int i;
/* 851 */     for (i = 1; i <= 11; i += 2) {
/* 852 */       a(☃, cra1, i, 10, 0, i, 11, 0, ceh1, ceh1, false);
/* 853 */       a(☃, cra1, i, 10, 12, i, 11, 12, ceh1, ceh1, false);
/* 854 */       a(☃, cra1, 0, 10, i, 0, 11, i, ceh2, ceh2, false);
/* 855 */       a(☃, cra1, 12, 10, i, 12, 11, i, ceh2, ceh2, false);
/* 856 */       a(☃, bup.dV.n(), i, 13, 0, cra1);
/* 857 */       a(☃, bup.dV.n(), i, 13, 12, cra1);
/* 858 */       a(☃, bup.dV.n(), 0, 13, i, cra1);
/* 859 */       a(☃, bup.dV.n(), 12, 13, i, cra1);
/* 860 */       if (i != 11) {
/* 861 */         a(☃, ceh1, i + 1, 13, 0, cra1);
/* 862 */         a(☃, ceh1, i + 1, 13, 12, cra1);
/* 863 */         a(☃, ceh2, 0, 13, i + 1, cra1);
/* 864 */         a(☃, ceh2, 12, 13, i + 1, cra1);
/*     */       } 
/*     */     } 
/* 867 */     a(☃, bup.dW.n().a(bwq.a, Boolean.valueOf(true)).a(bwq.b, Boolean.valueOf(true)), 0, 13, 0, cra1);
/* 868 */     a(☃, bup.dW.n().a(bwq.c, Boolean.valueOf(true)).a(bwq.b, Boolean.valueOf(true)), 0, 13, 12, cra1);
/* 869 */     a(☃, bup.dW.n().a(bwq.c, Boolean.valueOf(true)).a(bwq.d, Boolean.valueOf(true)), 12, 13, 12, cra1);
/* 870 */     a(☃, bup.dW.n().a(bwq.a, Boolean.valueOf(true)).a(bwq.d, Boolean.valueOf(true)), 12, 13, 0, cra1);
/*     */ 
/*     */     
/* 873 */     for (i = 3; i <= 9; i += 2) {
/* 874 */       a(☃, cra1, 1, 7, i, 1, 8, i, ceh2.a(bwq.d, Boolean.valueOf(true)), ceh2.a(bwq.d, Boolean.valueOf(true)), false);
/* 875 */       a(☃, cra1, 11, 7, i, 11, 8, i, ceh2.a(bwq.b, Boolean.valueOf(true)), ceh2.a(bwq.b, Boolean.valueOf(true)), false);
/*     */     } 
/*     */ 
/*     */     
/* 879 */     a(☃, cra1, 4, 2, 0, 8, 2, 12, bup.dV.n(), bup.dV.n(), false);
/* 880 */     a(☃, cra1, 0, 2, 4, 12, 2, 8, bup.dV.n(), bup.dV.n(), false);
/*     */     
/* 882 */     a(☃, cra1, 4, 0, 0, 8, 1, 3, bup.dV.n(), bup.dV.n(), false);
/* 883 */     a(☃, cra1, 4, 0, 9, 8, 1, 12, bup.dV.n(), bup.dV.n(), false);
/* 884 */     a(☃, cra1, 0, 0, 4, 3, 1, 8, bup.dV.n(), bup.dV.n(), false);
/* 885 */     a(☃, cra1, 9, 0, 4, 12, 1, 8, bup.dV.n(), bup.dV.n(), false);
/*     */     
/* 887 */     for (i = 4; i <= 8; i++) {
/* 888 */       for (int j = 0; j <= 2; j++) {
/* 889 */         b(☃, bup.dV.n(), i, -1, j, cra1);
/* 890 */         b(☃, bup.dV.n(), i, -1, 12 - j, cra1);
/*     */       } 
/*     */     } 
/* 893 */     for (i = 0; i <= 2; i++) {
/* 894 */       for (int j = 4; j <= 8; j++) {
/* 895 */         b(☃, bup.dV.n(), i, -1, j, cra1);
/* 896 */         b(☃, bup.dV.n(), 12 - i, -1, j, cra1);
/*     */       } 
/*     */     } 
/*     */ 
/*     */     
/* 901 */     a(☃, cra1, 5, 5, 5, 7, 5, 7, bup.dV.n(), bup.dV.n(), false);
/* 902 */     a(☃, cra1, 6, 1, 6, 6, 4, 6, bup.a.n(), bup.a.n(), false);
/* 903 */     a(☃, bup.dV.n(), 6, 0, 6, cra1);
/* 904 */     a(☃, bup.B.n(), 6, 5, 6, cra1);
/*     */     
/* 906 */     fx fx2 = new fx(a(6, 6), d(5), b(6, 6));
/* 907 */     if (cra1.b(fx2)) {
/* 908 */       ☃.I().a(fx2, cuy.e, 0);
/*     */     }
/*     */     
/* 911 */     return true;
/*     */   }
/*     */ }


/* Location:              C:\Users\Georg\OneDrive\Minecraft\Desktop\Minecraft\1.16.4.zip!\cri$f.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */