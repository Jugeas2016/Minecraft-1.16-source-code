/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class k
/*      */   extends cri.m
/*      */ {
/*      */   public k(int ☃, cra cra1, gc gc1) {
/*  921 */     super(clb.o, ☃);
/*      */     
/*  923 */     a(gc1);
/*  924 */     this.n = cra1;
/*      */   }
/*      */   
/*      */   public k(csw ☃, md md1) {
/*  928 */     super(clb.o, md1);
/*      */   }
/*      */ 
/*      */   
/*      */   public void a(cru ☃, List<cru> list, Random random) {
/*  933 */     a((cri.q)☃, list, random, 5, 3, true);
/*  934 */     a((cri.q)☃, list, random, 5, 11, true);
/*      */   }
/*      */   
/*      */   public static k a(List<cru> ☃, int i, int j, int n, gc gc1, int i1) {
/*  938 */     cra cra = cra.a(i, j, n, -5, -3, 0, 13, 14, 13, gc1);
/*      */     
/*  940 */     if (!a(cra) || cru.a(☃, cra) != null) {
/*  941 */       return null;
/*      */     }
/*      */     
/*  944 */     return new k(i1, cra, gc1);
/*      */   }
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean a(bsr ☃, bsn bsn1, cfy cfy1, Random random, cra cra1, brd brd1, fx fx1) {
/*  950 */     a(☃, cra1, 0, 3, 0, 12, 4, 12, bup.dV.n(), bup.dV.n(), false);
/*      */     
/*  952 */     a(☃, cra1, 0, 5, 0, 12, 13, 12, bup.a.n(), bup.a.n(), false);
/*      */ 
/*      */     
/*  955 */     a(☃, cra1, 0, 5, 0, 1, 12, 12, bup.dV.n(), bup.dV.n(), false);
/*  956 */     a(☃, cra1, 11, 5, 0, 12, 12, 12, bup.dV.n(), bup.dV.n(), false);
/*  957 */     a(☃, cra1, 2, 5, 11, 4, 12, 12, bup.dV.n(), bup.dV.n(), false);
/*  958 */     a(☃, cra1, 8, 5, 11, 10, 12, 12, bup.dV.n(), bup.dV.n(), false);
/*  959 */     a(☃, cra1, 5, 9, 11, 7, 12, 12, bup.dV.n(), bup.dV.n(), false);
/*  960 */     a(☃, cra1, 2, 5, 0, 4, 12, 1, bup.dV.n(), bup.dV.n(), false);
/*  961 */     a(☃, cra1, 8, 5, 0, 10, 12, 1, bup.dV.n(), bup.dV.n(), false);
/*  962 */     a(☃, cra1, 5, 9, 0, 7, 12, 1, bup.dV.n(), bup.dV.n(), false);
/*      */ 
/*      */     
/*  965 */     a(☃, cra1, 2, 11, 2, 10, 12, 10, bup.dV.n(), bup.dV.n(), false);
/*      */     
/*  967 */     ceh ceh1 = bup.dW.n().a(bwq.d, Boolean.valueOf(true)).a(bwq.b, Boolean.valueOf(true));
/*  968 */     ceh ceh2 = bup.dW.n().a(bwq.a, Boolean.valueOf(true)).a(bwq.c, Boolean.valueOf(true));
/*  969 */     ceh ceh3 = ceh2.a(bwq.d, Boolean.valueOf(true));
/*  970 */     ceh ceh4 = ceh2.a(bwq.b, Boolean.valueOf(true));
/*      */     
/*      */     int i;
/*  973 */     for (i = 1; i <= 11; i += 2) {
/*  974 */       a(☃, cra1, i, 10, 0, i, 11, 0, ceh1, ceh1, false);
/*  975 */       a(☃, cra1, i, 10, 12, i, 11, 12, ceh1, ceh1, false);
/*  976 */       a(☃, cra1, 0, 10, i, 0, 11, i, ceh2, ceh2, false);
/*  977 */       a(☃, cra1, 12, 10, i, 12, 11, i, ceh2, ceh2, false);
/*  978 */       a(☃, bup.dV.n(), i, 13, 0, cra1);
/*  979 */       a(☃, bup.dV.n(), i, 13, 12, cra1);
/*  980 */       a(☃, bup.dV.n(), 0, 13, i, cra1);
/*  981 */       a(☃, bup.dV.n(), 12, 13, i, cra1);
/*  982 */       if (i != 11) {
/*  983 */         a(☃, ceh1, i + 1, 13, 0, cra1);
/*  984 */         a(☃, ceh1, i + 1, 13, 12, cra1);
/*  985 */         a(☃, ceh2, 0, 13, i + 1, cra1);
/*  986 */         a(☃, ceh2, 12, 13, i + 1, cra1);
/*      */       } 
/*      */     } 
/*  989 */     a(☃, bup.dW.n().a(bwq.a, Boolean.valueOf(true)).a(bwq.b, Boolean.valueOf(true)), 0, 13, 0, cra1);
/*  990 */     a(☃, bup.dW.n().a(bwq.c, Boolean.valueOf(true)).a(bwq.b, Boolean.valueOf(true)), 0, 13, 12, cra1);
/*  991 */     a(☃, bup.dW.n().a(bwq.c, Boolean.valueOf(true)).a(bwq.d, Boolean.valueOf(true)), 12, 13, 12, cra1);
/*  992 */     a(☃, bup.dW.n().a(bwq.a, Boolean.valueOf(true)).a(bwq.d, Boolean.valueOf(true)), 12, 13, 0, cra1);
/*      */ 
/*      */     
/*  995 */     for (i = 3; i <= 9; i += 2) {
/*  996 */       a(☃, cra1, 1, 7, i, 1, 8, i, ceh3, ceh3, false);
/*  997 */       a(☃, cra1, 11, 7, i, 11, 8, i, ceh4, ceh4, false);
/*      */     } 
/*      */ 
/*      */     
/* 1001 */     ceh ceh5 = bup.dX.n().a(cak.a, gc.c); int j;
/* 1002 */     for (j = 0; j <= 6; j++) {
/* 1003 */       int i1 = j + 4;
/* 1004 */       for (int i2 = 5; i2 <= 7; i2++) {
/* 1005 */         a(☃, ceh5, i2, 5 + j, i1, cra1);
/*      */       }
/* 1007 */       if (i1 >= 5 && i1 <= 8) {
/* 1008 */         a(☃, cra1, 5, 5, i1, 7, j + 4, i1, bup.dV.n(), bup.dV.n(), false);
/* 1009 */       } else if (i1 >= 9 && i1 <= 10) {
/* 1010 */         a(☃, cra1, 5, 8, i1, 7, j + 4, i1, bup.dV.n(), bup.dV.n(), false);
/*      */       } 
/* 1012 */       if (j >= 1) {
/* 1013 */         a(☃, cra1, 5, 6 + j, i1, 7, 9 + j, i1, bup.a.n(), bup.a.n(), false);
/*      */       }
/*      */     } 
/* 1016 */     for (j = 5; j <= 7; j++) {
/* 1017 */       a(☃, ceh5, j, 12, 11, cra1);
/*      */     }
/* 1019 */     a(☃, cra1, 5, 6, 7, 5, 7, 7, ceh4, ceh4, false);
/* 1020 */     a(☃, cra1, 7, 6, 7, 7, 7, 7, ceh3, ceh3, false);
/* 1021 */     a(☃, cra1, 5, 13, 12, 7, 13, 12, bup.a.n(), bup.a.n(), false);
/*      */ 
/*      */     
/* 1024 */     a(☃, cra1, 2, 5, 2, 3, 5, 3, bup.dV.n(), bup.dV.n(), false);
/* 1025 */     a(☃, cra1, 2, 5, 9, 3, 5, 10, bup.dV.n(), bup.dV.n(), false);
/* 1026 */     a(☃, cra1, 2, 5, 4, 2, 5, 8, bup.dV.n(), bup.dV.n(), false);
/* 1027 */     a(☃, cra1, 9, 5, 2, 10, 5, 3, bup.dV.n(), bup.dV.n(), false);
/* 1028 */     a(☃, cra1, 9, 5, 9, 10, 5, 10, bup.dV.n(), bup.dV.n(), false);
/* 1029 */     a(☃, cra1, 10, 5, 4, 10, 5, 8, bup.dV.n(), bup.dV.n(), false);
/* 1030 */     ceh ceh6 = ceh5.a(cak.a, gc.f);
/* 1031 */     ceh ceh7 = ceh5.a(cak.a, gc.e);
/* 1032 */     a(☃, ceh7, 4, 5, 2, cra1);
/* 1033 */     a(☃, ceh7, 4, 5, 3, cra1);
/* 1034 */     a(☃, ceh7, 4, 5, 9, cra1);
/* 1035 */     a(☃, ceh7, 4, 5, 10, cra1);
/* 1036 */     a(☃, ceh6, 8, 5, 2, cra1);
/* 1037 */     a(☃, ceh6, 8, 5, 3, cra1);
/* 1038 */     a(☃, ceh6, 8, 5, 9, cra1);
/* 1039 */     a(☃, ceh6, 8, 5, 10, cra1);
/*      */ 
/*      */     
/* 1042 */     a(☃, cra1, 3, 4, 4, 4, 4, 8, bup.cM.n(), bup.cM.n(), false);
/* 1043 */     a(☃, cra1, 8, 4, 4, 9, 4, 8, bup.cM.n(), bup.cM.n(), false);
/* 1044 */     a(☃, cra1, 3, 5, 4, 4, 5, 8, bup.dY.n(), bup.dY.n(), false);
/* 1045 */     a(☃, cra1, 8, 5, 4, 9, 5, 8, bup.dY.n(), bup.dY.n(), false);
/*      */ 
/*      */     
/* 1048 */     a(☃, cra1, 4, 2, 0, 8, 2, 12, bup.dV.n(), bup.dV.n(), false);
/* 1049 */     a(☃, cra1, 0, 2, 4, 12, 2, 8, bup.dV.n(), bup.dV.n(), false);
/*      */     
/* 1051 */     a(☃, cra1, 4, 0, 0, 8, 1, 3, bup.dV.n(), bup.dV.n(), false);
/* 1052 */     a(☃, cra1, 4, 0, 9, 8, 1, 12, bup.dV.n(), bup.dV.n(), false);
/* 1053 */     a(☃, cra1, 0, 0, 4, 3, 1, 8, bup.dV.n(), bup.dV.n(), false);
/* 1054 */     a(☃, cra1, 9, 0, 4, 12, 1, 8, bup.dV.n(), bup.dV.n(), false);
/*      */     int n;
/* 1056 */     for (n = 4; n <= 8; n++) {
/* 1057 */       for (int i1 = 0; i1 <= 2; i1++) {
/* 1058 */         b(☃, bup.dV.n(), n, -1, i1, cra1);
/* 1059 */         b(☃, bup.dV.n(), n, -1, 12 - i1, cra1);
/*      */       } 
/*      */     } 
/* 1062 */     for (n = 0; n <= 2; n++) {
/* 1063 */       for (int i1 = 4; i1 <= 8; i1++) {
/* 1064 */         b(☃, bup.dV.n(), n, -1, i1, cra1);
/* 1065 */         b(☃, bup.dV.n(), 12 - n, -1, i1, cra1);
/*      */       } 
/*      */     } 
/*      */     
/* 1069 */     return true;
/*      */   }
/*      */ }


/* Location:              C:\Users\Georg\OneDrive\Minecraft\Desktop\Minecraft\1.16.4.zip!\cri$k.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */