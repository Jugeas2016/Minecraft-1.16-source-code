/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class a
/*     */   extends cri.m
/*     */ {
/*     */   public a(int ☃, cra cra1, gc gc1) {
/* 448 */     super(clb.e, ☃);
/*     */     
/* 450 */     a(gc1);
/* 451 */     this.n = cra1;
/*     */   }
/*     */   
/*     */   protected a(Random ☃, int i, int j) {
/* 455 */     super(clb.e, 0);
/*     */     
/* 457 */     a(gc.c.a.a(☃));
/*     */     
/* 459 */     if (i().n() == gc.a.c) {
/* 460 */       this.n = new cra(i, 64, j, i + 19 - 1, 73, j + 19 - 1);
/*     */     } else {
/* 462 */       this.n = new cra(i, 64, j, i + 19 - 1, 73, j + 19 - 1);
/*     */     } 
/*     */   }
/*     */   
/*     */   protected a(clb ☃, md md1) {
/* 467 */     super(☃, md1);
/*     */   }
/*     */   
/*     */   public a(csw ☃, md md1) {
/* 471 */     this(clb.e, md1);
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(cru ☃, List<cru> list, Random random) {
/* 476 */     a((cri.q)☃, list, random, 8, 3, false);
/* 477 */     b((cri.q)☃, list, random, 3, 8, false);
/* 478 */     c((cri.q)☃, list, random, 3, 8, false);
/*     */   }
/*     */   
/*     */   public static a a(List<cru> ☃, int i, int j, int k, gc gc1, int n) {
/* 482 */     cra cra = cra.a(i, j, k, -8, -3, 0, 19, 10, 19, gc1);
/*     */     
/* 484 */     if (!a(cra) || cru.a(☃, cra) != null) {
/* 485 */       return null;
/*     */     }
/*     */     
/* 488 */     return new a(n, cra, gc1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(bsr ☃, bsn bsn1, cfy cfy1, Random random, cra cra1, brd brd1, fx fx1) {
/* 494 */     a(☃, cra1, 7, 3, 0, 11, 4, 18, bup.dV.n(), bup.dV.n(), false);
/* 495 */     a(☃, cra1, 0, 3, 7, 18, 4, 11, bup.dV.n(), bup.dV.n(), false);
/*     */     
/* 497 */     a(☃, cra1, 8, 5, 0, 10, 7, 18, bup.a.n(), bup.a.n(), false);
/* 498 */     a(☃, cra1, 0, 5, 8, 18, 7, 10, bup.a.n(), bup.a.n(), false);
/*     */     
/* 500 */     a(☃, cra1, 7, 5, 0, 7, 5, 7, bup.dV.n(), bup.dV.n(), false);
/* 501 */     a(☃, cra1, 7, 5, 11, 7, 5, 18, bup.dV.n(), bup.dV.n(), false);
/* 502 */     a(☃, cra1, 11, 5, 0, 11, 5, 7, bup.dV.n(), bup.dV.n(), false);
/* 503 */     a(☃, cra1, 11, 5, 11, 11, 5, 18, bup.dV.n(), bup.dV.n(), false);
/* 504 */     a(☃, cra1, 0, 5, 7, 7, 5, 7, bup.dV.n(), bup.dV.n(), false);
/* 505 */     a(☃, cra1, 11, 5, 7, 18, 5, 7, bup.dV.n(), bup.dV.n(), false);
/* 506 */     a(☃, cra1, 0, 5, 11, 7, 5, 11, bup.dV.n(), bup.dV.n(), false);
/* 507 */     a(☃, cra1, 11, 5, 11, 18, 5, 11, bup.dV.n(), bup.dV.n(), false);
/*     */ 
/*     */     
/* 510 */     a(☃, cra1, 7, 2, 0, 11, 2, 5, bup.dV.n(), bup.dV.n(), false);
/* 511 */     a(☃, cra1, 7, 2, 13, 11, 2, 18, bup.dV.n(), bup.dV.n(), false);
/* 512 */     a(☃, cra1, 7, 0, 0, 11, 1, 3, bup.dV.n(), bup.dV.n(), false);
/* 513 */     a(☃, cra1, 7, 0, 15, 11, 1, 18, bup.dV.n(), bup.dV.n(), false); int i;
/* 514 */     for (i = 7; i <= 11; i++) {
/* 515 */       for (int j = 0; j <= 2; j++) {
/* 516 */         b(☃, bup.dV.n(), i, -1, j, cra1);
/* 517 */         b(☃, bup.dV.n(), i, -1, 18 - j, cra1);
/*     */       } 
/*     */     } 
/*     */     
/* 521 */     a(☃, cra1, 0, 2, 7, 5, 2, 11, bup.dV.n(), bup.dV.n(), false);
/* 522 */     a(☃, cra1, 13, 2, 7, 18, 2, 11, bup.dV.n(), bup.dV.n(), false);
/* 523 */     a(☃, cra1, 0, 0, 7, 3, 1, 11, bup.dV.n(), bup.dV.n(), false);
/* 524 */     a(☃, cra1, 15, 0, 7, 18, 1, 11, bup.dV.n(), bup.dV.n(), false);
/* 525 */     for (i = 0; i <= 2; i++) {
/* 526 */       for (int j = 7; j <= 11; j++) {
/* 527 */         b(☃, bup.dV.n(), i, -1, j, cra1);
/* 528 */         b(☃, bup.dV.n(), 18 - i, -1, j, cra1);
/*     */       } 
/*     */     } 
/*     */     
/* 532 */     return true;
/*     */   }
/*     */ }


/* Location:              C:\Users\Georg\OneDrive\Minecraft\Desktop\Minecraft\1.16.4.zip!\cri$a.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */