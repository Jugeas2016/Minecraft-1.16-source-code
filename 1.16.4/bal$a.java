/*     */ import java.util.Arrays;
/*     */ import java.util.Comparator;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public enum a
/*     */ {
/* 295 */   a(0, "normal", false),
/* 296 */   b(1, "lazy", false),
/* 297 */   c(2, "worried", false),
/* 298 */   d(3, "playful", false),
/* 299 */   e(4, "brown", true),
/* 300 */   f(5, "weak", true),
/* 301 */   g(6, "aggressive", false);
/*     */   static {
/* 303 */     h = (a[])Arrays.<a>stream(values()).sorted(Comparator.comparingInt(a::a)).toArray(☃ -> new a[☃]);
/*     */   }
/*     */   private static final a[] h;
/*     */   private final int i;
/*     */   private final String j;
/*     */   private final boolean k;
/*     */   
/*     */   a(int ☃, String str1, boolean bool) {
/* 311 */     this.i = ☃;
/* 312 */     this.j = str1;
/* 313 */     this.k = bool;
/*     */   }
/*     */   
/*     */   public int a() {
/* 317 */     return this.i;
/*     */   }
/*     */   
/*     */   public String b() {
/* 321 */     return this.j;
/*     */   }
/*     */   
/*     */   public boolean c() {
/* 325 */     return this.k;
/*     */   }
/*     */   
/*     */   private static a b(a ☃, a a1) {
/* 329 */     if (☃.c()) {
/* 330 */       if (☃ == a1) {
/* 331 */         return ☃;
/*     */       }
/* 333 */       return a;
/*     */     } 
/*     */ 
/*     */     
/* 337 */     return ☃;
/*     */   }
/*     */   
/*     */   public static a a(int ☃) {
/* 341 */     if (☃ < 0 || ☃ >= h.length) {
/* 342 */       ☃ = 0;
/*     */     }
/* 344 */     return h[☃];
/*     */   }
/*     */   
/*     */   public static a a(String ☃) {
/* 348 */     for (a a1 : values()) {
/* 349 */       if (a1.j.equals(☃)) {
/* 350 */         return a1;
/*     */       }
/*     */     } 
/*     */     
/* 354 */     return a;
/*     */   }
/*     */   
/*     */   public static a a(Random ☃) {
/* 358 */     int i = ☃.nextInt(16);
/* 359 */     if (i == 0) {
/* 360 */       return b;
/*     */     }
/* 362 */     if (i == 1) {
/* 363 */       return c;
/*     */     }
/* 365 */     if (i == 2) {
/* 366 */       return d;
/*     */     }
/* 368 */     if (i == 4) {
/* 369 */       return g;
/*     */     }
/* 371 */     if (i < 9) {
/* 372 */       return f;
/*     */     }
/* 374 */     if (i < 11) {
/* 375 */       return e;
/*     */     }
/*     */     
/* 378 */     return a;
/*     */   }
/*     */ }


/* Location:              C:\Users\Georg\OneDrive\Minecraft\Desktop\Minecraft\1.16.4.zip!\bal$a.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */