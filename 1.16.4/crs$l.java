/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class l
/*     */   extends crs.p
/*     */ {
/*     */   private final boolean a;
/*     */   
/*     */   public l(clb ☃, int i, Random random, int j, int k) {
/* 438 */     super(☃, i);
/*     */     
/* 440 */     this.a = true;
/* 441 */     a(gc.c.a.a(random));
/* 442 */     this.d = crs.p.a.a;
/*     */     
/* 444 */     if (i().n() == gc.a.c) {
/* 445 */       this.n = new cra(j, 64, k, j + 5 - 1, 74, k + 5 - 1);
/*     */     } else {
/* 447 */       this.n = new cra(j, 64, k, j + 5 - 1, 74, k + 5 - 1);
/*     */     } 
/*     */   }
/*     */   
/*     */   public l(int ☃, Random random, cra cra1, gc gc1) {
/* 452 */     super(clb.C, ☃);
/*     */     
/* 454 */     this.a = false;
/* 455 */     a(gc1);
/* 456 */     this.d = a(random);
/* 457 */     this.n = cra1;
/*     */   }
/*     */   
/*     */   public l(clb ☃, md md1) {
/* 461 */     super(☃, md1);
/* 462 */     this.a = md1.q("Source");
/*     */   }
/*     */   
/*     */   public l(csw ☃, md md1) {
/* 466 */     this(clb.C, md1);
/*     */   }
/*     */ 
/*     */   
/*     */   protected void a(md ☃) {
/* 471 */     super.a(☃);
/* 472 */     ☃.a("Source", this.a);
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(cru ☃, List<cru> list, Random random) {
/* 477 */     if (this.a)
/*     */     {
/* 479 */       crs.a(crs.c.class);
/*     */     }
/* 481 */     a((crs.m)☃, list, random, 1, 1);
/*     */   }
/*     */   
/*     */   public static l a(List<cru> ☃, Random random, int i, int j, int k, gc gc1, int m) {
/* 485 */     cra cra = cra.a(i, j, k, -1, -7, 0, 5, 11, 5, gc1);
/*     */     
/* 487 */     if (!a(cra) || cru.a(☃, cra) != null) {
/* 488 */       return null;
/*     */     }
/*     */     
/* 491 */     return new l(m, random, cra, gc1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(bsr ☃, bsn bsn1, cfy cfy1, Random random, cra cra1, brd brd1, fx fx1) {
/* 497 */     a(☃, cra1, 0, 0, 0, 4, 10, 4, true, random, crs.b());
/*     */     
/* 499 */     a(☃, random, cra1, this.d, 1, 7, 0);
/*     */     
/* 501 */     a(☃, random, cra1, crs.p.a.a, 1, 1, 4);
/*     */ 
/*     */     
/* 504 */     a(☃, bup.du.n(), 2, 6, 1, cra1);
/* 505 */     a(☃, bup.du.n(), 1, 5, 1, cra1);
/* 506 */     a(☃, bup.hR.n(), 1, 6, 1, cra1);
/* 507 */     a(☃, bup.du.n(), 1, 5, 2, cra1);
/* 508 */     a(☃, bup.du.n(), 1, 4, 3, cra1);
/* 509 */     a(☃, bup.hR.n(), 1, 5, 3, cra1);
/* 510 */     a(☃, bup.du.n(), 2, 4, 3, cra1);
/* 511 */     a(☃, bup.du.n(), 3, 3, 3, cra1);
/* 512 */     a(☃, bup.hR.n(), 3, 4, 3, cra1);
/* 513 */     a(☃, bup.du.n(), 3, 3, 2, cra1);
/* 514 */     a(☃, bup.du.n(), 3, 2, 1, cra1);
/* 515 */     a(☃, bup.hR.n(), 3, 3, 1, cra1);
/* 516 */     a(☃, bup.du.n(), 2, 2, 1, cra1);
/* 517 */     a(☃, bup.du.n(), 1, 1, 1, cra1);
/* 518 */     a(☃, bup.hR.n(), 1, 2, 1, cra1);
/* 519 */     a(☃, bup.du.n(), 1, 1, 2, cra1);
/* 520 */     a(☃, bup.hR.n(), 1, 1, 3, cra1);
/*     */     
/* 522 */     return true;
/*     */   }
/*     */ }


/* Location:              C:\Users\Georg\OneDrive\Minecraft\Desktop\Minecraft\1.16.4.zip!\crs$l.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */